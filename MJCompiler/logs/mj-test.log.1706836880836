INFO  15:38:51,939 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  15:38:51,943 - #1 program
INFO  15:38:51,943 - #54 Program
INFO  15:38:51,943 - #3 class
INFO  15:38:51,943 - #54 A
INFO  15:38:51,943 - #47 {
INFO  15:38:51,943 - #20 int
INFO  15:38:51,943 - #54 x
INFO  15:38:51,943 - #45 [
INFO  15:38:51,943 - #46 ]
INFO  15:38:51,943 - #41 ,
INFO  15:38:51,943 - #54 y
INFO  15:38:51,943 - #45 [
INFO  15:38:51,943 - #46 ]
INFO  15:38:51,943 - #39 ;
INFO  15:38:51,943 - #48 }
INFO  15:38:51,943 - #5 const
INFO  15:38:51,943 - #20 int
INFO  15:38:51,943 - #54 pi
INFO  15:38:51,943 - #36 =
INFO  15:38:51,943 - #52 3
INFO  15:38:51,943 - #41 ,
INFO  15:38:51,954 - #54 e
INFO  15:38:51,954 - #36 =
INFO  15:38:51,954 - #52 2
INFO  15:38:51,954 - #39 ;
INFO  15:38:51,954 - #20 int
INFO  15:38:51,954 - #54 a
INFO  15:38:51,954 - #41 ,
INFO  15:38:51,954 - #54 b
INFO  15:38:51,954 - #39 ;
INFO  15:38:51,954 - #3 class
INFO  15:38:51,955 - #54 B
INFO  15:38:51,955 - #12 extends
INFO  15:38:51,955 - #54 A
INFO  15:38:51,955 - #47 {
INFO  15:38:51,955 - #20 int
INFO  15:38:51,955 - #54 i
INFO  15:38:51,955 - #39 ;
INFO  15:38:51,955 - #47 {
INFO  15:38:51,955 - #20 int
INFO  15:38:51,955 - #54 getValue
INFO  15:38:51,955 - #43 (
INFO  15:38:51,955 - #20 int
INFO  15:38:51,955 - #54 a
INFO  15:38:51,955 - #44 )
INFO  15:38:51,955 - #20 int
INFO  15:38:51,955 - #54 b
INFO  15:38:51,955 - #39 ;
INFO  15:38:51,956 - #21 bool
INFO  15:38:51,956 - #54 c
INFO  15:38:51,956 - #39 ;
INFO  15:38:51,956 - #47 {
INFO  15:38:51,956 - #10 return
INFO  15:38:51,956 - #54 this
INFO  15:38:51,956 - #42 .
INFO  15:38:51,956 - #54 i
INFO  15:38:51,956 - #23 +
INFO  15:38:51,956 - #54 this
INFO  15:38:51,956 - #42 .
INFO  15:38:51,956 - #54 x
INFO  15:38:51,956 - #45 [
INFO  15:38:51,956 - #52 0
INFO  15:38:51,956 - #46 ]
INFO  15:38:51,956 - #23 +
INFO  15:38:51,956 - #54 a
INFO  15:38:51,956 - #39 ;
INFO  15:38:51,956 - #48 }
INFO  15:38:51,956 - #11 void
INFO  15:38:51,956 - #54 m
INFO  15:38:51,956 - #43 (
INFO  15:38:51,956 - #44 )
INFO  15:38:51,956 - #20 int
INFO  15:38:51,956 - #54 a
INFO  15:38:51,956 - #39 ;
INFO  15:38:51,956 - #47 {
INFO  15:38:51,956 - #54 x
INFO  15:38:51,956 - #42 .
INFO  15:38:51,956 - #54 foreach
INFO  15:38:51,956 - #43 (
INFO  15:38:51,956 - #54 a
INFO  15:38:51,957 - #49 =>
INFO  15:38:51,957 - #8 print
INFO  15:38:51,957 - #43 (
INFO  15:38:51,957 - #54 a
INFO  15:38:51,957 - #44 )
INFO  15:38:51,957 - #39 ;
INFO  15:38:51,957 - #44 )
INFO  15:38:51,957 - #39 ;
INFO  15:38:51,957 - #48 }
INFO  15:38:51,957 - #48 }
INFO  15:38:51,957 - #48 }
INFO  15:38:51,957 - #3 class
INFO  15:38:51,957 - #54 C
INFO  15:38:51,957 - #12 extends
INFO  15:38:51,957 - #54 B
INFO  15:38:51,957 - #47 {
INFO  15:38:51,957 - #54 A
INFO  15:38:51,957 - #54 theA
INFO  15:38:51,957 - #39 ;
INFO  15:38:51,957 - #20 int
INFO  15:38:51,957 - #54 a
INFO  15:38:51,957 - #39 ;
INFO  15:38:51,957 - #48 }
INFO  15:38:51,957 - #47 {
INFO  15:38:51,957 - #11 void
INFO  15:38:51,957 - #54 main
INFO  15:38:51,957 - #43 (
INFO  15:38:51,957 - #44 )
INFO  15:38:51,957 - #54 A
INFO  15:38:51,957 - #54 a
INFO  15:38:51,957 - #39 ;
INFO  15:38:51,957 - #54 C
INFO  15:38:51,958 - #54 c
INFO  15:38:51,958 - #39 ;
INFO  15:38:51,958 - #20 int
INFO  15:38:51,958 - #54 i
INFO  15:38:51,958 - #39 ;
INFO  15:38:51,958 - #20 int
INFO  15:38:51,958 - #54 x
INFO  15:38:51,958 - #45 [
INFO  15:38:51,958 - #46 ]
INFO  15:38:51,958 - #39 ;
INFO  15:38:51,958 - #22 char
INFO  15:38:51,958 - #54 ch
INFO  15:38:51,958 - #39 ;
INFO  15:38:51,958 - #47 {
INFO  15:38:51,958 - #54 a
INFO  15:38:51,958 - #36 =
INFO  15:38:51,958 - #7 new
INFO  15:38:51,958 - #54 A
INFO  15:38:51,958 - #39 ;
INFO  15:38:51,958 - #54 a
INFO  15:38:51,958 - #42 .
INFO  15:38:51,959 - #54 x
INFO  15:38:51,959 - #36 =
INFO  15:38:51,959 - #7 new
INFO  15:38:51,959 - #20 int
INFO  15:38:51,959 - #45 [
INFO  15:38:51,959 - #52 5
INFO  15:38:51,959 - #46 ]
INFO  15:38:51,959 - #39 ;
INFO  15:38:51,959 - #54 a
INFO  15:38:51,959 - #42 .
INFO  15:38:51,959 - #54 y
INFO  15:38:51,959 - #36 =
INFO  15:38:51,959 - #7 new
INFO  15:38:51,959 - #20 int
INFO  15:38:51,959 - #45 [
INFO  15:38:51,959 - #52 5
INFO  15:38:51,959 - #46 ]
INFO  15:38:51,959 - #39 ;
INFO  15:38:51,959 - #54 c
INFO  15:38:51,959 - #36 =
INFO  15:38:51,959 - #7 new
INFO  15:38:51,959 - #54 C
INFO  15:38:51,959 - #39 ;
INFO  15:38:51,959 - #54 c
INFO  15:38:51,959 - #42 .
INFO  15:38:51,959 - #54 theA
INFO  15:38:51,959 - #36 =
INFO  15:38:51,959 - #54 a
INFO  15:38:51,959 - #39 ;
INFO  15:38:51,959 - #54 c
INFO  15:38:51,959 - #42 .
INFO  15:38:51,959 - #54 x
INFO  15:38:51,959 - #36 =
INFO  15:38:51,961 - #7 new
INFO  15:38:51,961 - #20 int
INFO  15:38:51,961 - #45 [
INFO  15:38:51,961 - #52 5
INFO  15:38:51,961 - #46 ]
INFO  15:38:51,961 - #39 ;
INFO  15:38:51,961 - #54 x
INFO  15:38:51,961 - #36 =
INFO  15:38:51,961 - #7 new
INFO  15:38:51,961 - #20 int
INFO  15:38:51,961 - #45 [
INFO  15:38:51,961 - #52 3
INFO  15:38:51,961 - #46 ]
INFO  15:38:51,961 - #39 ;
INFO  15:38:51,961 - #9 read
INFO  15:38:51,961 - #43 (
INFO  15:38:51,961 - #54 c
INFO  15:38:51,961 - #42 .
INFO  15:38:51,961 - #54 i
INFO  15:38:51,961 - #44 )
INFO  15:38:51,961 - #39 ;
INFO  15:38:51,961 - #54 i
INFO  15:38:51,961 - #36 =
INFO  15:38:51,961 - #52 0
INFO  15:38:51,961 - #39 ;
INFO  15:38:51,961 - #54 while
INFO  15:38:51,961 - #43 (
INFO  15:38:51,961 - #54 i
INFO  15:38:51,961 - #32 <
INFO  15:38:51,961 - #52 5
INFO  15:38:51,961 - #44 )
INFO  15:38:51,962 - #47 {
INFO  15:38:51,962 - #9 read
INFO  15:38:51,962 - #43 (
INFO  15:38:51,962 - #54 c
INFO  15:38:51,962 - #42 .
INFO  15:38:51,962 - #54 x
INFO  15:38:51,962 - #45 [
INFO  15:38:51,962 - #54 i
INFO  15:38:51,962 - #46 ]
INFO  15:38:51,962 - #44 )
INFO  15:38:51,962 - #39 ;
INFO  15:38:51,962 - #9 read
INFO  15:38:51,962 - #43 (
INFO  15:38:51,962 - #54 c
INFO  15:38:51,962 - #42 .
INFO  15:38:51,962 - #54 theA
INFO  15:38:51,962 - #42 .
INFO  15:38:51,962 - #54 x
INFO  15:38:51,962 - #45 [
INFO  15:38:51,962 - #54 i
INFO  15:38:51,962 - #46 ]
INFO  15:38:51,962 - #44 )
INFO  15:38:51,962 - #39 ;
INFO  15:38:51,962 - #54 i
INFO  15:38:51,962 - #37 ++
INFO  15:38:51,962 - #39 ;
INFO  15:38:51,962 - #48 }
INFO  15:38:51,962 - #45 [
INFO  15:38:51,962 - #54 a
INFO  15:38:51,963 - #41 ,
INFO  15:38:51,963 - #41 ,
INFO  15:38:51,963 - #54 b
INFO  15:38:51,963 - #46 ]
INFO  15:38:51,963 - #36 =
INFO  15:38:51,963 - #54 c
INFO  15:38:51,963 - #42 .
INFO  15:38:51,963 - #54 x
INFO  15:38:51,963 - #39 ;
INFO  15:38:51,963 - #8 print
INFO  15:38:51,963 - #43 (
INFO  15:38:51,963 - #54 c
INFO  15:38:51,963 - #42 .
INFO  15:38:51,963 - #54 getValue
INFO  15:38:51,963 - #43 (
INFO  15:38:51,963 - #54 c
INFO  15:38:51,963 - #42 .
INFO  15:38:51,963 - #54 theA
INFO  15:38:51,963 - #42 .
INFO  15:38:51,963 - #54 x
INFO  15:38:51,963 - #45 [
INFO  15:38:51,963 - #52 0
INFO  15:38:51,963 - #46 ]
INFO  15:38:51,963 - #44 )
INFO  15:38:51,963 - #44 )
INFO  15:38:51,964 - #39 ;
INFO  15:38:51,964 - #54 c
INFO  15:38:51,964 - #42 .
INFO  15:38:51,964 - #54 m
INFO  15:38:51,964 - #43 (
INFO  15:38:51,964 - #44 )
INFO  15:38:51,964 - #39 ;
INFO  15:38:51,964 - #48 }
INFO  15:38:51,964 - #48 }
