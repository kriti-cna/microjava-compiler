INFO  17:40:26,727 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  17:40:26,732 - #1 program
INFO  17:40:26,732 - #54 p
INFO  17:40:26,732 - #16 namespace
INFO  17:40:26,732 - #54 sizes
INFO  17:40:26,732 - #47 {
INFO  17:40:26,732 - #5 const
INFO  17:40:26,732 - #20 int
INFO  17:40:26,732 - #54 tableSize
INFO  17:40:26,732 - #36 =
INFO  17:40:26,732 - #52 10
INFO  17:40:26,732 - #39 ;
INFO  17:40:26,734 - #47 {
INFO  17:40:26,734 - #48 }
INFO  17:40:26,734 - #48 }
INFO  17:40:26,734 - #3 class
INFO  17:40:26,734 - #54 Table
INFO  17:40:26,734 - #47 {
INFO  17:40:26,734 - #20 int
INFO  17:40:26,734 - #54 pos
INFO  17:40:26,734 - #45 [
INFO  17:40:26,734 - #46 ]
INFO  17:40:26,734 - #41 ,
INFO  17:40:26,734 - #54 neg
INFO  17:40:26,734 - #45 [
INFO  17:40:26,734 - #46 ]
INFO  17:40:26,734 - #41 ,
INFO  17:40:26,734 - #54 factor
INFO  17:40:26,734 - #39 ;
INFO  17:40:26,735 - #15 static
INFO  17:40:26,735 - #20 int
INFO  17:40:26,735 - #54 id
INFO  17:40:26,735 - #39 ;
INFO  17:40:26,735 - #15 static
INFO  17:40:26,735 - #47 {
INFO  17:40:26,735 - #54 id
INFO  17:40:26,735 - #36 =
INFO  17:40:26,735 - #52 0
INFO  17:40:26,735 - #39 ;
INFO  17:40:26,735 - #48 }
INFO  17:40:26,735 - #47 {
INFO  17:40:26,735 - #11 void
INFO  17:40:26,735 - #54 setfactor
INFO  17:40:26,735 - #43 (
INFO  17:40:26,735 - #20 int
INFO  17:40:26,735 - #54 factor
INFO  17:40:26,735 - #44 )
INFO  17:40:26,735 - #47 {
INFO  17:40:26,735 - #54 this
INFO  17:40:26,736 - #42 .
INFO  17:40:26,736 - #54 factor
INFO  17:40:26,736 - #36 =
INFO  17:40:26,736 - #54 factor
INFO  17:40:26,736 - #39 ;
INFO  17:40:26,736 - #48 }
INFO  17:40:26,736 - #11 void
INFO  17:40:26,736 - #54 putp
INFO  17:40:26,736 - #43 (
INFO  17:40:26,736 - #20 int
INFO  17:40:26,736 - #54 a
INFO  17:40:26,736 - #41 ,
INFO  17:40:26,736 - #20 int
INFO  17:40:26,736 - #54 idx
INFO  17:40:26,736 - #44 )
INFO  17:40:26,736 - #47 {
INFO  17:40:26,736 - #54 this
INFO  17:40:26,736 - #42 .
INFO  17:40:26,736 - #54 pos
INFO  17:40:26,737 - #45 [
INFO  17:40:26,737 - #54 idx
INFO  17:40:26,737 - #46 ]
INFO  17:40:26,737 - #36 =
INFO  17:40:26,737 - #54 a
INFO  17:40:26,737 - #39 ;
INFO  17:40:26,737 - #48 }
INFO  17:40:26,737 - #11 void
INFO  17:40:26,737 - #54 putn
INFO  17:40:26,737 - #43 (
INFO  17:40:26,737 - #20 int
INFO  17:40:26,737 - #54 a
INFO  17:40:26,737 - #41 ,
INFO  17:40:26,737 - #20 int
INFO  17:40:26,737 - #54 idx
INFO  17:40:26,737 - #44 )
INFO  17:40:26,737 - #47 {
INFO  17:40:26,737 - #54 this
INFO  17:40:26,737 - #42 .
INFO  17:40:26,737 - #54 neg
INFO  17:40:26,737 - #45 [
INFO  17:40:26,737 - #54 idx
INFO  17:40:26,737 - #46 ]
INFO  17:40:26,737 - #36 =
INFO  17:40:26,738 - #54 a
INFO  17:40:26,738 - #39 ;
INFO  17:40:26,738 - #48 }
INFO  17:40:26,738 - #20 int
INFO  17:40:26,738 - #54 getp
INFO  17:40:26,738 - #43 (
INFO  17:40:26,738 - #20 int
INFO  17:40:26,738 - #54 idx
INFO  17:40:26,738 - #44 )
INFO  17:40:26,738 - #47 {
INFO  17:40:26,738 - #10 return
INFO  17:40:26,738 - #54 pos
INFO  17:40:26,738 - #45 [
INFO  17:40:26,738 - #54 idx
INFO  17:40:26,738 - #46 ]
INFO  17:40:26,738 - #39 ;
INFO  17:40:26,738 - #48 }
INFO  17:40:26,739 - #20 int
INFO  17:40:26,739 - #54 getn
INFO  17:40:26,739 - #43 (
INFO  17:40:26,739 - #20 int
INFO  17:40:26,739 - #54 idx
INFO  17:40:26,739 - #44 )
INFO  17:40:26,739 - #47 {
INFO  17:40:26,739 - #10 return
INFO  17:40:26,739 - #54 neg
INFO  17:40:26,739 - #45 [
INFO  17:40:26,739 - #54 idx
INFO  17:40:26,739 - #46 ]
INFO  17:40:26,740 - #39 ;
INFO  17:40:26,740 - #48 }
INFO  17:40:26,740 - #48 }
INFO  17:40:26,740 - #48 }
INFO  17:40:26,740 - #54 Table
INFO  17:40:26,740 - #54 val
INFO  17:40:26,740 - #39 ;
INFO  17:40:26,740 - #20 int
INFO  17:40:26,740 - #54 rows
INFO  17:40:26,740 - #41 ,
INFO  17:40:26,740 - #54 columns
INFO  17:40:26,740 - #39 ;
INFO  17:40:26,741 - #47 {
INFO  17:40:26,741 - #11 void
INFO  17:40:26,741 - #54 f
INFO  17:40:26,741 - #43 (
INFO  17:40:26,741 - #22 char
INFO  17:40:26,741 - #54 ch
INFO  17:40:26,741 - #41 ,
INFO  17:40:26,741 - #20 int
INFO  17:40:26,741 - #54 a
INFO  17:40:26,741 - #41 ,
INFO  17:40:26,741 - #20 int
INFO  17:40:26,741 - #54 arg
INFO  17:40:26,741 - #44 )
INFO  17:40:26,741 - #20 int
INFO  17:40:26,741 - #54 x
INFO  17:40:26,742 - #39 ;
INFO  17:40:26,742 - #47 {
INFO  17:40:26,742 - #54 x
INFO  17:40:26,742 - #36 =
INFO  17:40:26,742 - #54 arg
INFO  17:40:26,742 - #39 ;
INFO  17:40:26,742 - #48 }
INFO  17:40:26,742 - #11 void
INFO  17:40:26,742 - #54 main
INFO  17:40:26,742 - #43 (
INFO  17:40:26,742 - #44 )
INFO  17:40:26,742 - #20 int
INFO  17:40:26,742 - #54 x
INFO  17:40:26,742 - #41 ,
INFO  17:40:26,742 - #54 i
INFO  17:40:26,742 - #39 ;
INFO  17:40:26,743 - #22 char
INFO  17:40:26,743 - #54 c
INFO  17:40:26,743 - #41 ,
INFO  17:40:26,743 - #20 int
INFO  17:40:26,743 - #45 [
INFO  17:40:26,743 - #46 ]
INFO  17:40:26,743 - #54 arr
INFO  17:40:26,743 - #39 ;
INFO  17:40:26,743 - #47 {
INFO  17:40:26,743 - #54 val
INFO  17:40:26,743 - #36 =
INFO  17:40:26,743 - #7 new
INFO  17:40:26,743 - #54 Table
INFO  17:40:26,743 - #43 (
INFO  17:40:26,743 - #44 )
INFO  17:40:26,743 - #39 ;
INFO  17:40:26,743 - #54 val
INFO  17:40:26,743 - #42 .
INFO  17:40:26,743 - #54 setfactor
INFO  17:40:26,743 - #43 (
INFO  17:40:26,743 - #52 2
INFO  17:40:26,743 - #44 )
INFO  17:40:26,743 - #39 ;
INFO  17:40:26,743 - #54 arr
INFO  17:40:26,743 - #36 =
INFO  17:40:26,743 - #7 new
INFO  17:40:26,743 - #20 int
INFO  17:40:26,745 - #45 [
INFO  17:40:26,745 - #52 3
INFO  17:40:26,745 - #46 ]
INFO  17:40:26,745 - #39 ;
INFO  17:40:26,745 - #14 for
INFO  17:40:26,745 - #43 (
INFO  17:40:26,745 - #54 i
INFO  17:40:26,745 - #36 =
INFO  17:40:26,745 - #52 0
INFO  17:40:26,745 - #39 ;
INFO  17:40:26,745 - #54 i
INFO  17:40:26,745 - #32 <
INFO  17:40:26,745 - #52 3
INFO  17:40:26,745 - #39 ;
INFO  17:40:26,745 - #54 i
INFO  17:40:26,745 - #37 ++
INFO  17:40:26,745 - #44 )
INFO  17:40:26,745 - #47 {
INFO  17:40:26,745 - #54 arr
INFO  17:40:26,745 - #45 [
INFO  17:40:26,745 - #54 i
INFO  17:40:26,745 - #46 ]
INFO  17:40:26,745 - #36 =
INFO  17:40:26,745 - #54 i
INFO  17:40:26,745 - #39 ;
INFO  17:40:26,745 - #48 }
INFO  17:40:26,745 - #14 for
INFO  17:40:26,745 - #43 (
INFO  17:40:26,745 - #54 i
INFO  17:40:26,745 - #36 =
INFO  17:40:26,745 - #52 0
INFO  17:40:26,745 - #39 ;
INFO  17:40:26,745 - #54 i
INFO  17:40:26,745 - #32 <
INFO  17:40:26,745 - #52 3
INFO  17:40:26,745 - #39 ;
INFO  17:40:26,745 - #54 i
INFO  17:40:26,745 - #37 ++
INFO  17:40:26,746 - #44 )
INFO  17:40:26,746 - #8 print
INFO  17:40:26,746 - #43 (
INFO  17:40:26,746 - #54 arr
INFO  17:40:26,746 - #45 [
INFO  17:40:26,746 - #54 i
INFO  17:40:26,746 - #46 ]
INFO  17:40:26,746 - #44 )
INFO  17:40:26,746 - #39 ;
INFO  17:40:26,746 - #54 val
INFO  17:40:26,746 - #42 .
INFO  17:40:26,746 - #54 pos
INFO  17:40:26,746 - #36 =
INFO  17:40:26,746 - #7 new
INFO  17:40:26,746 - #20 int
INFO  17:40:26,746 - #45 [
INFO  17:40:26,746 - #54 sizes
INFO  17:40:26,746 - #50 ::
INFO  17:40:26,746 - #54 tableSize
INFO  17:40:26,746 - #46 ]
INFO  17:40:26,746 - #39 ;
INFO  17:40:26,746 - #54 val
INFO  17:40:26,746 - #42 .
INFO  17:40:26,746 - #54 neg
INFO  17:40:26,746 - #36 =
INFO  17:40:26,746 - #7 new
INFO  17:40:26,746 - #20 int
INFO  17:40:26,746 - #45 [
INFO  17:40:26,746 - #54 sizes
INFO  17:40:26,746 - #50 ::
INFO  17:40:26,746 - #54 tableSize
INFO  17:40:26,747 - #46 ]
INFO  17:40:26,747 - #39 ;
INFO  17:40:26,747 - #9 read
INFO  17:40:26,747 - #43 (
INFO  17:40:26,747 - #54 x
INFO  17:40:26,747 - #44 )
INFO  17:40:26,747 - #39 ;
INFO  17:40:26,747 - #14 for
INFO  17:40:26,747 - #43 (
INFO  17:40:26,747 - #39 ;
INFO  17:40:26,747 - #54 i
INFO  17:40:26,747 - #32 <
INFO  17:40:26,747 - #54 sizes
INFO  17:40:26,747 - #50 ::
INFO  17:40:26,747 - #54 tableSize
INFO  17:40:26,747 - #39 ;
INFO  17:40:26,747 - #54 i
INFO  17:40:26,747 - #37 ++
INFO  17:40:26,747 - #44 )
INFO  17:40:26,747 - #47 {
INFO  17:40:26,747 - #54 val
INFO  17:40:26,747 - #42 .
INFO  17:40:26,747 - #54 putp
INFO  17:40:26,747 - #43 (
INFO  17:40:26,748 - #52 0
INFO  17:40:26,748 - #41 ,
INFO  17:40:26,748 - #54 i
INFO  17:40:26,748 - #44 )
INFO  17:40:26,748 - #39 ;
INFO  17:40:26,748 - #54 val
INFO  17:40:26,748 - #42 .
INFO  17:40:26,748 - #54 putn
INFO  17:40:26,748 - #43 (
INFO  17:40:26,748 - #52 0
INFO  17:40:26,748 - #41 ,
INFO  17:40:26,748 - #54 i
INFO  17:40:26,748 - #44 )
INFO  17:40:26,748 - #39 ;
INFO  17:40:26,748 - #48 }
INFO  17:40:26,748 - #54 f
INFO  17:40:26,748 - #43 (
INFO  17:40:26,748 - #54 c
INFO  17:40:26,748 - #41 ,
INFO  17:40:26,748 - #54 x
INFO  17:40:26,748 - #41 ,
INFO  17:40:26,748 - #54 i
INFO  17:40:26,749 - #44 )
INFO  17:40:26,749 - #39 ;
INFO  17:40:26,749 - #9 read
INFO  17:40:26,749 - #43 (
INFO  17:40:26,749 - #54 rows
INFO  17:40:26,749 - #44 )
INFO  17:40:26,749 - #39 ;
INFO  17:40:26,749 - #54 x
INFO  17:40:26,749 - #36 =
INFO  17:40:26,749 - #54 rows
INFO  17:40:26,749 - #39 ;
INFO  17:40:26,749 - #14 for
INFO  17:40:26,749 - #43 (
INFO  17:40:26,749 - #39 ;
INFO  17:40:26,749 - #39 ;
INFO  17:40:26,749 - #44 )
INFO  17:40:26,749 - #47 {
INFO  17:40:26,749 - #6 if
INFO  17:40:26,749 - #43 (
INFO  17:40:26,749 - #54 x
INFO  17:40:26,749 - #33 <=
INFO  17:40:26,749 - #52 0
INFO  17:40:26,749 - #44 )
INFO  17:40:26,749 - #2 break
INFO  17:40:26,749 - #39 ;
INFO  17:40:26,749 - #6 if
INFO  17:40:26,749 - #43 (
INFO  17:40:26,749 - #52 0
INFO  17:40:26,749 - #33 <=
INFO  17:40:26,749 - #54 x
INFO  17:40:26,749 - #34 &&
INFO  17:40:26,749 - #54 x
INFO  17:40:26,749 - #32 <
INFO  17:40:26,749 - #54 sizes
INFO  17:40:26,749 - #50 ::
INFO  17:40:26,749 - #54 tableSize
INFO  17:40:26,749 - #44 )
INFO  17:40:26,749 - #47 {
INFO  17:40:26,749 - #54 val
INFO  17:40:26,751 - #42 .
INFO  17:40:26,751 - #54 putp
INFO  17:40:26,751 - #43 (
INFO  17:40:26,751 - #54 val
INFO  17:40:26,751 - #42 .
INFO  17:40:26,751 - #54 getp
INFO  17:40:26,751 - #43 (
INFO  17:40:26,751 - #54 x
INFO  17:40:26,751 - #44 )
INFO  17:40:26,751 - #23 +
INFO  17:40:26,751 - #52 1
INFO  17:40:26,751 - #44 )
INFO  17:40:26,751 - #39 ;
INFO  17:40:26,751 - #48 }
INFO  17:40:26,751 - #4 else
INFO  17:40:26,751 - #6 if
INFO  17:40:26,751 - #43 (
INFO  17:40:26,751 - #54 sizes
INFO  17:40:26,751 - #50 ::
INFO  17:40:26,751 - #54 tableSize
INFO  17:40:26,751 - #32 <
INFO  17:40:26,751 - #54 x
INFO  17:40:26,751 - #34 &&
INFO  17:40:26,751 - #54 x
INFO  17:40:26,751 - #32 <
INFO  17:40:26,751 - #52 0
INFO  17:40:26,751 - #44 )
INFO  17:40:26,751 - #47 {
INFO  17:40:26,751 - #54 val
INFO  17:40:26,751 - #42 .
INFO  17:40:26,751 - #54 putn
INFO  17:40:26,751 - #43 (
INFO  17:40:26,751 - #54 val
INFO  17:40:26,751 - #42 .
INFO  17:40:26,751 - #54 getn
INFO  17:40:26,751 - #43 (
INFO  17:40:26,751 - #54 x
INFO  17:40:26,751 - #44 )
INFO  17:40:26,751 - #23 +
INFO  17:40:26,751 - #52 1
INFO  17:40:26,752 - #44 )
INFO  17:40:26,752 - #39 ;
INFO  17:40:26,752 - #48 }
INFO  17:40:26,752 - #9 read
INFO  17:40:26,752 - #43 (
INFO  17:40:26,752 - #54 x
INFO  17:40:26,752 - #44 )
INFO  17:40:26,752 - #39 ;
INFO  17:40:26,752 - #48 }
INFO  17:40:26,752 - #48 }
INFO  17:40:26,752 - #48 }
